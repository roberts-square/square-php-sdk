<?php

declare(strict_types=1);

namespace Square\Models;

use stdClass;

/**
 * Represents an update made to an inventory adjustment
 */
class InventoryAdjustmentUpdate implements \JsonSerializable
{
    /**
     * @var string
     */
    private $adjustmentId;

    /**
     * @var string|null
     */
    private $quantity;

    /**
     * @param string $adjustmentId
     */
    public function __construct(string $adjustmentId)
    {
        $this->adjustmentId = $adjustmentId;
    }

    /**
     * Returns Adjustment Id.
     * A unique ID generated by Square for the
     * `InventoryAdjustment` that will be updated.
     */
    public function getAdjustmentId(): string
    {
        return $this->adjustmentId;
    }

    /**
     * Sets Adjustment Id.
     * A unique ID generated by Square for the
     * `InventoryAdjustment` that will be updated.
     *
     * @required
     * @maps adjustment_id
     */
    public function setAdjustmentId(string $adjustmentId): void
    {
        $this->adjustmentId = $adjustmentId;
    }

    /**
     * Returns Quantity.
     * The updated quantity of the adjustment as a decimal string.
     * Can support up to 5 digits after the decimal point.
     */
    public function getQuantity(): ?string
    {
        return $this->quantity;
    }

    /**
     * Sets Quantity.
     * The updated quantity of the adjustment as a decimal string.
     * Can support up to 5 digits after the decimal point.
     *
     * @maps quantity
     */
    public function setQuantity(?string $quantity): void
    {
        $this->quantity = $quantity;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['adjustment_id'] = $this->adjustmentId;
        if (isset($this->quantity)) {
            $json['quantity']  = $this->quantity;
        }
        $json = array_filter($json, function ($val) {
            return $val !== null;
        });

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
